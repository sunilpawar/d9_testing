{#
/**
 * @file
 * Theme override to display a taxonomy term.
 *
 * Available variables:
 * - url: URL of the current term.
 * - name: Name of the current term.
 * - content: Items for the content of the term (fields and description).
 *   Use 'content' to print them all, or print a subset such as
 *   'content.description'. Use the following code to exclude the
 *   printing of a given child element:
 *   @code
 *   {{ content|without('description') }}
 *   @endcode
 * - attributes: HTML attributes for the wrapper.
 * - page: Flag for the full page state.
 * - term: The taxonomy term entity, including:
 *   - id: The ID of the taxonomy term.
 *   - bundle: Machine name of the current vocabulary.
 * - view_mode: View mode, e.g. 'full', 'teaser', etc.
 *
 * @see template_preprocess_taxonomy_term()
 */
#}
{% import 'themes/custom/behave/templates/behavenet.twig' as behavenet %}
{%
  set classes = [
    'taxonomy-term',
    'vocabulary-' ~ term.bundle|clean_class,
  ]
%}
<div{{ attributes.setAttribute('id', 'taxonomy-term-' ~ term.id).addClass(classes) }}>
  {{ title_prefix }}
  {% if not page %}
    <h2><a href="{{ url }}">{{ name }}</a></h2>
  {% endif %}
  {{ title_suffix }}
  {{ content.field_term_synonyms }}
  {% if breadcrumbs %}
    <div class="behavenet_terms__breadcrumbs">
      <em>is a kind of:</em>
      <ul>
        {% for row in breadcrumbs %}
          <li>
            {% for item in row %}
              <a href="{{ item.url }}">{{ item.text }}</a>
              {%- if not loop.last %} &raquo; {% endif -%}
            {% endfor %}
          </li>
        {% endfor %}
      </ul>
    </div>
  {% endif %}
  <div class="content">
    {{ content|without('field_related_terms', 'field_term_synonyms', 'field_outside_media') }}
    {% if special_items is not empty %}
      <h2>{{ behavenet.pluralize(special_items_header) | capitalize }}</h2>
      <div class="term__special-listing">
        {{ behavenet.displayList(special_items, TRUE) }}
      </div>
    {% endif %}
    {% if children %}
      <div class="behavenet_terms__children">
        <em>includes:</em>
        {{ behavenet.displayList(children) }}
      </div>
    {% endif %}

    {% if special_blocks is not empty %}
      {% for block in special_blocks %}
        {% include '@classy/block/block.html.twig' with {
          label: block.title,
          content: block.content,
        } %}
      {% endfor %}
    {% endif %}

    {% if dsm_criteria_ids is not empty %}
      <p>
        {% for vid, nid in dsm_criteria_ids %}
          {# @TODO: determine if there is a chance of multiple criteria. #}
          <a href="/node/{{ nid }}">Old criteria for this diagnosis</a>.
          {% if not loop.last %}
            <br />
          {% endif %}
        {% endfor %}
      </p>
    {% endif %}

    {% if memberOf %}
      <div class="behavenet_terms__member-of-lists">
        <h2>This term appears in</h2>
        {{ behavenet.displayList(memberOf) }}
      </div>
    {% endif %}

    {# Hide the header if there is nothing to display. #}
    {% if content.field_related_terms is not empty %}
      {% set related_terms %}
        {{ sort_terms(content.field_related_terms) }}
      {% endset %}
      {% if related_terms | trim is not empty %}
        <div class="behavenet_terms__related">
          {% if isList %}
            <h2>Glossary:</h2>
          {% else %}
            <h2>See Also:</h2>
          {% endif %}
          {{ related_terms }}
        </div>
      {% endif %}
    {% endif %}

    {{ content.field_outside_media }}
  </div>
</div>
